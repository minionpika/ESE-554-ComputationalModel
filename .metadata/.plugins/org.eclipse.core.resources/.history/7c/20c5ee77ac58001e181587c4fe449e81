package stackWith2Queues;


public class jee {
	private int maxSize;
	private long[] queArray1,queArray2;
	private int front1,front2;
	private int rear1,rear2;
	private int nItems;
	
	public jee(int s)
	{
		maxSize =s;
		queArray1 = new long[maxSize];
		queArray2 = new long[maxSize];
		front1 = 0;
		rear1 = -1;
		front2=0;
		rear2=-1;
		nItems=0;
		
	}
	
	public void insert(long j)
	{
		if(rear1 == maxSize-1) {
			rear1 =-1;
			}
			queArray1[++rear1] =j;
			nItems++;
	}
	
	public long remove()
	{	
		while(front1<=nItems-1) {
			queArray2[++rear2]=queArray1[front1++];
		}
		long top=queArray1[front1-1];
		long[] temp=queArray1;
		queArray1=queArray2;
		queArray2=temp;
		nItems--;
		front1=0;
		front2=0;
		rear1=nItems-1;
		rear2=-1;
		return top;
		
	}
		

		
	
	
	public long peekFront()
	{
		return queArray1[rear1];
	}
	public boolean isEmpty()
	{
		return (nItems==0);
	}
	public boolean isFull()
	{
		return (nItems==maxSize-1);
	}
	public int size() {
		return nItems;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		jee theQueue = new jee(5);
		theQueue.insert(10);
		theQueue.insert(20);
		theQueue.insert(30);
		theQueue.insert(40);
		
		
		theQueue.remove();
		theQueue.remove();
		theQueue.remove();
		
		theQueue.insert(50);
		theQueue.insert(60);
		theQueue.insert(70);
		theQueue.insert(80);
		theQueue.insert(90);
		
		
		while(!theQueue.isEmpty())
		{
			long n= theQueue.remove();
			System.out.print(n);
			System.out.print(" ");
		}
		System.out.println("");
	}

}

