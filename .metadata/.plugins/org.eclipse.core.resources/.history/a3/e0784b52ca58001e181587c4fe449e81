package queueWith2Stacks;


class Stack
{
	private int maxSize, top;
	private long[] stackArray;
	
	public Stack(int s) {
		maxSize = s;
		stackArray = new long[maxSize];
		top = -1;
	}
	
	public void push(long j) {
		stackArray[++top] = j;
	}
	
	public long pop() {
		return stackArray[top--];
	}
	
	public long peek() {
		return stackArray[top];
	}
	public boolean isEmpty() {
		return (top == -1);
	}
	
	public boolean isFull() {
		return (top == maxSize-1);
	}
}

public class _2QueueWith2Stacks {
	public static void main(String[] args) {
		Stack stack = new Stack(100000);	// random size
		stack.push(10);
		stack.push(20);
		stack.push(30);
		stack.push(40);
		stack.push(100);
		stack.pop();
		stack.pop();
		stack.push(50);
		stack.push(60);
		stack.push(70);
		stack.push(80);
		
		while(!stack.isEmpty()) {
			long n = stack.pop();
			System.out.print(n);
			System.out.print(" ");
		}
	}
}
